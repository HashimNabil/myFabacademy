{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__3.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "r1.width-c0.r*2",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "8",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f-1.8742X-Xf1.8742a-f-4Y-Yf4',float('-1.874198'),float('-4.000000'),float('-inf'),float('1.874198'),float('4.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -481.3548152407865,
                -156.89491117866126
            ],
            "name": "r0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "r0.x0+r0.width/2",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "r0.y0+r0.height/2-c0.r",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "1.1258024005836917",
                    "name": "r",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-1.00661558389729",
                    "name": "_a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r+q-Xf1.8742q-Yf2.8742f1.1258',float('0.748395'),float('1.748395'),float('-inf'),float('3.000000'),float('4.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -476.52964117469037,
                41.91397946168786
            ],
            "name": "c0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/18",
                "",
                "import fab",
                "import math",
                "",
                "title('Circle (center)')",
                "",
                "input('x0',float)",
                "input('y0',float)",
                "input('r',float)",
                "input('_a',float)",
                "",
                "output('shape', fab.shapes.circle(x0, y0, r))",
                "",
                "def drag_r(this,x,y,z):",
                "    dx = x - this.x0",
                "    dy = y - this.y0",
                "    this.r = math.sqrt(dx**2 + dy**2)",
                "    this._a = math.atan2(dy, dx)",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x0,",
                "     math.sin(i/36. * 2*math.pi) * r + y0, 0)",
                "    for i in range(36)], close=True)",
                "sb.ui.point(x0,y0)",
                "sb.ui.point(x0 + r*math.cos(_a),",
                "             y0 + r*math.sin(_a),",
                "             drag=drag_r, relative=False)",
                "",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__1.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__0.__0]",
                    "name": "_x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__0.__1]",
                    "name": "_y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "2",
                    "name": "i",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "2",
                    "name": "j",
                    "type": "int",
                    "uid": 4
                },
                {
                    "expr": "-r1.width+c0.r*2",
                    "name": "dx",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "-r0.height+c0.r*2",
                    "name": "dy",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0im-Xf0-Yf-0-Zf0im-Xf-0-Yf0-Zf0-r+q-Xf1.8742q-Yf2.8742f1.1258m-Xf-3.7484-Yf0-Zf0-r+q-Xf1.8742q-Yf2.8742f1.1258m-Xf0-Yf-5.7484-Zf0im-Xf-0-Yf0-Zf0-r+q-Xf1.8742q-Yf2.8742f1.1258m-Xf-3.7484-Yf0-Zf0-r+q-Xf1.8742q-Yf2.8742f1.1258',float('-3.000005'),float('-4.000005'),float('-inf'),float('3.000000'),float('4.000000'),float('inf'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                -142.8557326958619,
                -47.44114615185575
            ],
            "name": "a0",
            "script": [
                "import fab",
                "",
                "title('Array (2D)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('_x', float)",
                "input('_y', float)",
                "input('i', int)",
                "input('j', int)",
                "input('dx', float)",
                "input('dy', float)",
                "",
                "output('array', fab.shapes.iterate3d(shape, i, j, 1, dx, dy, 0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + dx, _y, 0), (_x, _y, 0), (_x, _y + dy, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + dx, _y - 0.3, 0), (_x + dx, _y + 0.3, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + 0.3, _y + dy, 0), (_x - 0.3, _y + dy, 0)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, 0, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y, 0, color=sb.color.teal, drag=(dx, None, None))",
                "sb.ui.point(_x, _y + dy, 0, color=sb.color.teal, drag=(None, dy, None))",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "6",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "r0.height-c0.r*2",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f-3X-Xf3a-f-2.8742Y-Yf2.8742',float('-3.000000'),float('-2.874197'),float('-inf'),float('3.000000'),float('2.874197'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -488.0009026978296,
                -385.3474827195995
            ],
            "name": "r1",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__0.__4,__2.__7]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iaa-f-3X-Xf3a-f-2.8742Y-Yf2.8742iaa-f-1.8742X-Xf1.8742a-f-4Y-Yf4m-Xf0-Yf0-Zf0im-Xf0-Yf-0-Zf0im-Xf-0-Yf0-Zf0-r+q-Xf1.8742q-Yf2.8742f1.1258m-Xf-3.7484-Yf0-Zf0-r+q-Xf1.8742q-Yf2.8742f1.1258m-Xf0-Yf-5.7484-Zf0im-Xf-0-Yf0-Zf0-r+q-Xf1.8742q-Yf2.8742f1.1258m-Xf-3.7484-Yf0-Zf0-r+q-Xf1.8742q-Yf2.8742f1.1258',float('-3.000005'),float('-4.000005'),float('-inf'),float('3.000000'),float('4.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                155.95646060797839,
                -273.3698726450199
            ],
            "name": "u0",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__4.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1iaa-f-3X-Xf3a-f-2.8742Y-Yf2.8742iaa-f-1.8742X-Xf1.8742a-f-4Y-Yf4m-Xf0-Yf0-Zf0im-Xf0-Yf-0-Zf0im-Xf-0-Yf0-Zf0-r+q-Xf1.8742q-Yf2.8742f1.1258m-Xf-3.7484-Yf0-Zf0-r+q-Xf1.8742q-Yf2.8742f1.1258m-Xf0-Yf-5.7484-Zf0im-Xf-0-Yf0-Zf0-r+q-Xf1.8742q-Yf2.8742f1.1258m-Xf-3.7484-Yf0-Zf0-r+q-Xf1.8742q-Yf2.8742f1.1258a-f0Z-Zf1',float('-3.000005'),float('-4.000005'),float('0.000000'),float('3.000000'),float('4.000000'),float('1.000000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                511.84723521024273,
                -272.6697996526805
            ],
            "name": "e0",
            "script": [
                "import fab",
                "",
                "title('Extrude')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.extrude_z(shape, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, zmin), (_x, _y, zmax)], color=sb.color.green)",
                "sb.ui.point(_x, _y, zmin, color=sb.color.green)",
                "sb.ui.point(_x, _y, zmax, color=sb.color.green)",
                "",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__1.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__1.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "c0.r*2",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "c0.r*2",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f0.748395X-Xf3a-f1.7484Y-Yf4',float('0.748395'),float('1.748395'),float('-inf'),float('3.000000'),float('4.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -142.61793324000143,
                243.98145745654682
            ],
            "name": "r2",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__6.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f0.748395X-Xf3a-f1.7484Y-Yf4a-f0Z-Zf1',float('0.748395'),float('1.748395'),float('0.000000'),float('3.000000'),float('4.000000'),float('1.000000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                243.62217375506563,
                -30.09450381680222
            ],
            "name": "e1",
            "script": [
                "import fab",
                "",
                "title('Extrude')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.extrude_z(shape, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, zmin), (_x, _y, zmax)], color=sb.color.green)",
                "sb.ui.point(_x, _y, zmin, color=sb.color.green)",
                "sb.ui.point(_x, _y, zmax, color=sb.color.green)",
                "",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__7.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__5.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f0.748395X-Xf3a-f1.7484Y-Yf4a-f0Z-Zf1nam__f1iaa-f-3X-Xf3a-f-2.8742Y-Yf2.8742iaa-f-1.8742X-Xf1.8742a-f-4Y-Yf4m-Xf0-Yf0-Zf0im-Xf0-Yf-0-Zf0im-Xf-0-Yf0-Zf0-r+q-Xf1.8742q-Yf2.8742f1.1258m-Xf-3.7484-Yf0-Zf0-r+q-Xf1.8742q-Yf2.8742f1.1258m-Xf0-Yf-5.7484-Zf0im-Xf-0-Yf0-Zf0-r+q-Xf1.8742q-Yf2.8742f1.1258m-Xf-3.7484-Yf0-Zf0-r+q-Xf1.8742q-Yf2.8742f1.1258a-f0Z-Zf1',float('0.748395'),float('1.748395'),float('0.000000'),float('3.000000'),float('4.000000'),float('1.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                811.7816816003938,
                -82.67980702404942
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 8
        }
    ],
    "protocol": 6,
    "type": "sb"
}
